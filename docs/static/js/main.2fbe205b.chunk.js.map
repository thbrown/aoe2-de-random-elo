{"version":3,"sources":["helper.js","MatchPanel.js","App.js","reportWebVitals.js","index.js"],"names":["strings","JSON","parse","Helper","id","civLabelArray","civ","filter","length","string","mapLabelArray","map_type","map","props","state","showRatings","toggleRatings","event","this","setState","bind","className","alt","playerOneCiv","title","src","toLowerCase","href","playerOneId","playerOneName","playerOneRating","playerTwoCiv","playerTwoId","playerTwoName","playerTwoRating","matchId","style","width","onClick","Component","minRating","maxRating","numberOfMatches","selectedMatches","handleMinRatingChange","target","value","handleMaxRatingChange","handleNumberOfMatchesChange","onRandomClick","a","min","parseInt","max","numMatches","targetRatings","console","log","i","push","getRandomRating","alert","document","getElementById","classList","add","remove","fetch","method","mode","cache","credentials","headers","Accept","redirect","referrerPolicy","body","stringify","query","Math","round","Date","getTime","response","json","data","filtered","match","leaderboard_id","match_id","players","name","profile_id","getCivLabel","rating","getMapLabel","avgRating","pickedMatches","j","pickedMatch","pickedMatchDiff","matchToConsider","diff","abs","selectedMatchUiElements","maxWidth","margin","for","type","step","onChange","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2fbe205b.chunk.js","sourcesContent":["// From https://aoe2.net/api/strings?game=aoe2de&language=en\r\nconst strings = JSON.parse(\r\n  `{\"language\":\"en\",\"age\":[{\"id\":0,\"string\":\"Standard\"},{\"id\":2,\"string\":\"Dark Age\"},{\"id\":3,\"string\":\"Feudal Age\"},{\"id\":4,\"string\":\"Castle Age\"},{\"id\":5,\"string\":\"Imperial Age\"},{\"id\":6,\"string\":\"Post-Imperial Age\"}],\"civ\":[{\"id\":1,\"string\":\"Britons\"},{\"id\":2,\"string\":\"Franks\"},{\"id\":3,\"string\":\"Goths\"},{\"id\":4,\"string\":\"Teutons\"},{\"id\":5,\"string\":\"Japanese\"},{\"id\":6,\"string\":\"Chinese\"},{\"id\":7,\"string\":\"Byzantines\"},{\"id\":8,\"string\":\"Persians\"},{\"id\":9,\"string\":\"Saracens\"},{\"id\":10,\"string\":\"Turks\"},{\"id\":11,\"string\":\"Vikings\"},{\"id\":12,\"string\":\"Mongols\"},{\"id\":13,\"string\":\"Celts\"},{\"id\":14,\"string\":\"Spanish\"},{\"id\":15,\"string\":\"Aztecs\"},{\"id\":16,\"string\":\"Mayans\"},{\"id\":17,\"string\":\"Huns\"},{\"id\":18,\"string\":\"Koreans\"},{\"id\":19,\"string\":\"Italians\"},{\"id\":20,\"string\":\"Indians\"},{\"id\":21,\"string\":\"Incas\"},{\"id\":22,\"string\":\"Magyars\"},{\"id\":23,\"string\":\"Slavs\"},{\"id\":24,\"string\":\"Portuguese\"},{\"id\":25,\"string\":\"Ethiopians\"},{\"id\":26,\"string\":\"Malians\"},{\"id\":27,\"string\":\"Berbers\"},{\"id\":28,\"string\":\"Khmer\"},{\"id\":29,\"string\":\"Malay\"},{\"id\":30,\"string\":\"Burmese\"},{\"id\":31,\"string\":\"Vietnamese\"},{\"id\":32,\"string\":\"Bulgarians\"},{\"id\":33,\"string\":\"Tatars\"},{\"id\":34,\"string\":\"Cumans\"},{\"id\":35,\"string\":\"Lithuanians\"},{\"id\":36,\"string\":\"Burgundians\"},{\"id\":37,\"string\":\"Sicilians\"},{\"id\":38,\"string\":\"Poles\"},{\"id\":39,\"string\":\"Bohemians\"}],\"game_type\":[{\"id\":0,\"string\":\"Random Map\"},{\"id\":1,\"string\":\"Regicide\"},{\"id\":2,\"string\":\"Death Match\"},{\"id\":3,\"string\":\"Scenario\"},{\"id\":6,\"string\":\"King of the Hill\"},{\"id\":7,\"string\":\"Wonder Race\"},{\"id\":8,\"string\":\"Defend the Wonder\"},{\"id\":9,\"string\":\"Turbo Random Map\"},{\"id\":10,\"string\":\"Capture the Relic\"},{\"id\":11,\"string\":\"Sudden Death\"},{\"id\":12,\"string\":\"Battle Royale\"},{\"id\":13,\"string\":\"Empire Wars\"},{\"id\":15,\"string\":\"Co-Op Campaign\"}],\"leaderboard\":[{\"id\":0,\"string\":\"Unranked\"},{\"id\":1,\"string\":\"1v1 Death Match\"},{\"id\":2,\"string\":\"Team Death Match\"},{\"id\":3,\"string\":\"1v1 Random Map\"},{\"id\":4,\"string\":\"Team Random Map\"},{\"id\":13,\"string\":\"1v1 Empire Wars\"},{\"id\":14,\"string\":\"Team Empire Wars\"}],\"map_size\":[{\"id\":0,\"string\":\"Tiny (2 player)\"},{\"id\":1,\"string\":\"Small (3 player)\"},{\"id\":2,\"string\":\"Medium (4 player)\"},{\"id\":3,\"string\":\"Normal (6 player)\"},{\"id\":4,\"string\":\"Large (8 player)\"},{\"id\":5,\"string\":\"Giant\"},{\"id\":6,\"string\":\"Ludicrous\"}],\"map_type\":[{\"id\":9,\"string\":\"Arabia\"},{\"id\":10,\"string\":\"Archipelago\"},{\"id\":11,\"string\":\"Baltic\"},{\"id\":12,\"string\":\"Black Forest\"},{\"id\":13,\"string\":\"Coastal\"},{\"id\":14,\"string\":\"Continental\"},{\"id\":15,\"string\":\"Crater Lake\"},{\"id\":16,\"string\":\"Fortress\"},{\"id\":17,\"string\":\"Gold Rush\"},{\"id\":18,\"string\":\"Highland\"},{\"id\":19,\"string\":\"Islands\"},{\"id\":20,\"string\":\"Mediterranean\"},{\"id\":21,\"string\":\"Migration\"},{\"id\":22,\"string\":\"Rivers\"},{\"id\":23,\"string\":\"Team Islands\"},{\"id\":24,\"string\":\"Full Random\"},{\"id\":25,\"string\":\"Scandinavia\"},{\"id\":26,\"string\":\"Mongolia\"},{\"id\":27,\"string\":\"Yucatan\"},{\"id\":28,\"string\":\"Salt Marsh\"},{\"id\":29,\"string\":\"Arena\"},{\"id\":31,\"string\":\"Oasis\"},{\"id\":32,\"string\":\"Ghost Lake\"},{\"id\":33,\"string\":\"Nomad\"},{\"id\":49,\"string\":\"Iberia\"},{\"id\":50,\"string\":\"Britain\"},{\"id\":51,\"string\":\"Mideast\"},{\"id\":52,\"string\":\"Texas\"},{\"id\":53,\"string\":\"Italy\"},{\"id\":54,\"string\":\"Central America\"},{\"id\":55,\"string\":\"France\"},{\"id\":56,\"string\":\"Norse Lands\"},{\"id\":57,\"string\":\"Sea of Japan (East Sea)\"},{\"id\":58,\"string\":\"Byzantium\"},{\"id\":59,\"string\":\"Custom\"},{\"id\":60,\"string\":\"Random Land Map\"},{\"id\":62,\"string\":\"Random Real World Map\"},{\"id\":63,\"string\":\"Blind Random\"},{\"id\":65,\"string\":\"Random Special Map\"},{\"id\":66,\"string\":\"Random Special Map\"},{\"id\":67,\"string\":\"Acropolis\"},{\"id\":68,\"string\":\"Budapest\"},{\"id\":69,\"string\":\"Cenotes\"},{\"id\":70,\"string\":\"City of Lakes\"},{\"id\":71,\"string\":\"Golden Pit\"},{\"id\":72,\"string\":\"Hideout\"},{\"id\":73,\"string\":\"Hill Fort\"},{\"id\":74,\"string\":\"Lombardia\"},{\"id\":75,\"string\":\"Steppe\"},{\"id\":76,\"string\":\"Valley\"},{\"id\":77,\"string\":\"MegaRandom\"},{\"id\":78,\"string\":\"Hamburger\"},{\"id\":79,\"string\":\"CtR Random\"},{\"id\":80,\"string\":\"CtR Monsoon\"},{\"id\":81,\"string\":\"CtR Pyramid Descent\"},{\"id\":82,\"string\":\"CtR Spiral\"},{\"id\":83,\"string\":\"Kilimanjaro\"},{\"id\":84,\"string\":\"Mountain Pass\"},{\"id\":85,\"string\":\"Nile Delta\"},{\"id\":86,\"string\":\"Serengeti\"},{\"id\":87,\"string\":\"Socotra\"},{\"id\":88,\"string\":\"Amazon\"},{\"id\":89,\"string\":\"China\"},{\"id\":90,\"string\":\"Horn of Africa\"},{\"id\":91,\"string\":\"India\"},{\"id\":92,\"string\":\"Madagascar\"},{\"id\":93,\"string\":\"West Africa\"},{\"id\":94,\"string\":\"Bohemia\"},{\"id\":95,\"string\":\"Earth\"},{\"id\":96,\"string\":\"Canyons\"},{\"id\":97,\"string\":\"Enemy Archipelago\"},{\"id\":98,\"string\":\"Enemy Islands\"},{\"id\":99,\"string\":\"Far Out\"},{\"id\":100,\"string\":\"Front Line\"},{\"id\":101,\"string\":\"Inner Circle\"},{\"id\":102,\"string\":\"Motherland\"},{\"id\":103,\"string\":\"Open Plains\"},{\"id\":104,\"string\":\"Ring of Water\"},{\"id\":105,\"string\":\"Snakepit\"},{\"id\":106,\"string\":\"The Eye\"},{\"id\":107,\"string\":\"Australia\"},{\"id\":108,\"string\":\"Indochina\"},{\"id\":109,\"string\":\"Indonesia\"},{\"id\":110,\"string\":\"Strait of Malacca\"},{\"id\":111,\"string\":\"Philippines\"},{\"id\":112,\"string\":\"Bog Islands\"},{\"id\":113,\"string\":\"Mangrove Jungle\"},{\"id\":114,\"string\":\"Pacific Islands\"},{\"id\":115,\"string\":\"Sandbank\"},{\"id\":116,\"string\":\"Water Nomad\"},{\"id\":117,\"string\":\"Jungle Islands\"},{\"id\":118,\"string\":\"Holy Line\"},{\"id\":119,\"string\":\"Border Stones\"},{\"id\":120,\"string\":\"Yin Yang\"},{\"id\":121,\"string\":\"Jungle Lanes\"},{\"id\":122,\"string\":\"Alpine Lakes\"},{\"id\":123,\"string\":\"Bogland\"},{\"id\":124,\"string\":\"Mountain Ridge\"},{\"id\":125,\"string\":\"Ravines\"},{\"id\":126,\"string\":\"Wolf Hill\"},{\"id\":132,\"string\":\"Antarctica\"},{\"id\":133,\"string\":\"Aral Sea\"},{\"id\":134,\"string\":\"Black Sea\"},{\"id\":135,\"string\":\"Caucasus\"},{\"id\":136,\"string\":\"Caucasus\"},{\"id\":137,\"string\":\"Custom Map Pool\"},{\"id\":138,\"string\":\"Custom Map Pool\"},{\"id\":139,\"string\":\"Golden Swamp\"},{\"id\":140,\"string\":\"Four Lakes\"},{\"id\":141,\"string\":\"Land Nomad\"},{\"id\":142,\"string\":\"BR Battle On Ice\"},{\"id\":143,\"string\":\"BR El Dorado\"},{\"id\":144,\"string\":\"BR Fall of Axum\"},{\"id\":145,\"string\":\"BR Fall of Rome\"},{\"id\":146,\"string\":\"BR Majapahit Empire\"},{\"id\":147,\"string\":\"Amazon Tunnel\"},{\"id\":148,\"string\":\"Coastal Forest\"},{\"id\":149,\"string\":\"African Clearing\"},{\"id\":150,\"string\":\"Atacama\"},{\"id\":151,\"string\":\"Seize the Mountain\"},{\"id\":152,\"string\":\"Crater\"},{\"id\":153,\"string\":\"Crossroads\"},{\"id\":154,\"string\":\"Michi\"},{\"id\":155,\"string\":\"Team Moats\"},{\"id\":156,\"string\":\"Volcanic Island\"},{\"id\":157,\"string\":\"Acclivity\"},{\"id\":158,\"string\":\"Eruption\"},{\"id\":159,\"string\":\"Frigid Lake\"},{\"id\":160,\"string\":\"Greenland\"},{\"id\":161,\"string\":\"Lowland\"},{\"id\":162,\"string\":\"Marketplace\"},{\"id\":163,\"string\":\"Meadow\"},{\"id\":164,\"string\":\"Mountain Range\"},{\"id\":165,\"string\":\"Northern Isles\"},{\"id\":166,\"string\":\"Ring Fortress\"},{\"id\":167,\"string\":\"Runestones\"}],\"rating_type\":[{\"id\":0,\"string\":\"Unranked\"},{\"id\":1,\"string\":\"1v1 Death Match\"},{\"id\":2,\"string\":\"1v1 Random Map\"},{\"id\":3,\"string\":\"Team Death Match\"},{\"id\":4,\"string\":\"Team Random Map\"},{\"id\":5,\"string\":\"1v1 Random Map Quick Play\"},{\"id\":6,\"string\":\"Team Random Map Quick Play\"},{\"id\":7,\"string\":\"1v1 Empire Wars Quick Play\"},{\"id\":8,\"string\":\"Team Empire Wars Quick Play\"},{\"id\":9,\"string\":\"Battle Royale Quick Play\"},{\"id\":13,\"string\":\"1v1 Empire Wars\"},{\"id\":14,\"string\":\"Team Empire Wars\"}],\"resources\":[{\"id\":0,\"string\":\"Standard\"},{\"id\":1,\"string\":\"Low\"},{\"id\":2,\"string\":\"Medium\"},{\"id\":3,\"string\":\"High\"},{\"id\":4,\"string\":\"Ultra High\"},{\"id\":5,\"string\":\"Infinite\"},{\"id\":6,\"string\":\"Random\"}],\"speed\":[{\"id\":0,\"string\":\"Slow\"},{\"id\":1,\"string\":\"Casual\"},{\"id\":2,\"string\":\"Normal\"},{\"id\":3,\"string\":\"Fast\"}],\"victory\":[{\"id\":1,\"string\":\"Conquest\"},{\"id\":7,\"string\":\"Time Limit\"},{\"id\":8,\"string\":\"Score\"},{\"id\":9,\"string\":\"Standard\"},{\"id\":11,\"string\":\"Last Man Standing\"}],\"visibility\":[{\"id\":0,\"string\":\"Normal\"},{\"id\":1,\"string\":\"Explored\"},{\"id\":2,\"string\":\"All Visible\"}]}`\r\n);\r\n\r\nclass Helper {\r\n  static getCivLabel(id) {\r\n    const civLabelArray = strings.civ.filter((civ) => civ.id === id);\r\n    return civLabelArray.length === 1 ? civLabelArray[0].string : null;\r\n  }\r\n\r\n  static getMapLabel(id) {\r\n    const mapLabelArray = strings.map_type.filter((map) => map.id === id);\r\n    return mapLabelArray.length === 1 ? mapLabelArray[0].string : null;\r\n  }\r\n}\r\n\r\nexport default Helper;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./matchPanel.css\";\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      showRatings: false,\r\n    };\r\n\r\n    this.toggleRatings = function (event) {\r\n      if (this.state.showRatings) {\r\n        this.setState({ showRatings: false });\r\n      } else {\r\n        this.setState({ showRatings: true });\r\n      }\r\n    }.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"match-container\">\r\n          <div className=\"match-info-container\">\r\n            <div>\r\n              <h3 className=\"map-name\">{this.props.map}</h3>\r\n            </div>\r\n            <div className=\"both-player-container\">\r\n              <div className=\"player-container\">\r\n                <div className=\"player-name-container\">\r\n                  <img\r\n                    className=\"civ-logo\"\r\n                    alt={this.props.playerOneCiv}\r\n                    title={this.props.playerOneCiv}\r\n                    src={\r\n                      \"https://thbrown.github.io/aoe2-de-random-elo/civs/\" + // TODO: this should really be PUBLIC_URL somehow\r\n                      this.props.playerOneCiv.toLowerCase() +\r\n                      \".png\"\r\n                    }\r\n                  ></img>\r\n                  <div>\r\n                    <a\r\n                      href={`https://aoe2.net/#profile-${this.props.playerOneId}`}\r\n                    >\r\n                      {this.props.playerOneName}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={\r\n                    \"ratings-container \" +\r\n                    (this.state.showRatings ? \"\" : \"hidden\")\r\n                  }\r\n                >\r\n                  {this.props.playerOneRating}\r\n                </div>\r\n              </div>\r\n              <div className=\"versus\">vs.</div>\r\n              <div className=\"player-container\">\r\n                <div className=\"player-name-container\">\r\n                  <img\r\n                    className=\"civ-logo\"\r\n                    alt={this.props.playerTwoCiv}\r\n                    title={this.props.playerTwoCiv}\r\n                    src={\r\n                      \"https://thbrown.github.io/aoe2-de-random-elo/civs/\" +\r\n                      this.props.playerTwoCiv.toLowerCase() +\r\n                      \".png\"\r\n                    }\r\n                  ></img>\r\n                  <div>\r\n                    <a\r\n                      href={`https://aoe2.net/#profile-${this.props.playerTwoId}`}\r\n                    >\r\n                      {this.props.playerTwoName}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={\r\n                    \"ratings-container \" +\r\n                    (this.state.showRatings ? \"\" : \"hidden\")\r\n                  }\r\n                >\r\n                  {this.props.playerTwoRating}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"match-button-container\">\r\n            <div>\r\n              <a\r\n                className=\"spectate-game button match-option-button\"\r\n                href={`https://aoe2.net/s/${this.props.matchId}`}\r\n              >\r\n                Spectate in DE\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button\r\n                style={{\r\n                  width: \"122px\",\r\n                }}\r\n                className=\"button match-option-button\"\r\n                onClick={this.toggleRatings}\r\n              >\r\n                {this.state.showRatings ? \"Hide Ratings\" : \"Unhide Ratings\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport Helper from \"./helper.js\";\r\nimport MatchPanel from \"./MatchPanel.js\";\r\n\r\nconst AOE2_NET_PROXY_URL =\r\n  \"https://us-central1-age-of-empires-307521.cloudfunctions.net/aoe2-net-cors-proxy\";\r\n\r\nconst DEFAULT_MIN_RATING = 500;\r\nconst DEFAULT_MAX_RATING = 2000;\r\nconst DEFAULT_NUMBER_OF_MATCHES = 5;\r\n\r\nconst MATCHES_TO_REQUEST = 500; // Must be less than 1k\r\n\r\n// TODO: strictly in bounds?\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      minRating: DEFAULT_MIN_RATING,\r\n      maxRating: DEFAULT_MAX_RATING,\r\n      numberOfMatches: DEFAULT_NUMBER_OF_MATCHES,\r\n      selectedMatches: [],\r\n    };\r\n\r\n    this.handleMinRatingChange = function (event) {\r\n      this.setState({ minRating: event.target.value });\r\n    }.bind(this);\r\n\r\n    this.handleMaxRatingChange = function (event) {\r\n      this.setState({ maxRating: event.target.value });\r\n    }.bind(this);\r\n\r\n    this.handleNumberOfMatchesChange = function (event) {\r\n      this.setState({ numberOfMatches: event.target.value });\r\n    }.bind(this);\r\n\r\n    this.onRandomClick = async function () {\r\n      try {\r\n        // Select a random rating that will be used select a match\r\n        // Do this first so we can complain if the params are bad\r\n        let min = parseInt(this.state.minRating);\r\n        let max = parseInt(this.state.maxRating);\r\n        let numMatches = parseInt(this.state.numMatches);\r\n\r\n        if (numMatches < 1) {\r\n          return;\r\n        }\r\n\r\n        let targetRatings = [];\r\n\r\n        console.log(\"Number of matches\", this.state.numberOfMatches);\r\n\r\n        for (let i = 0; i < this.state.numberOfMatches; i++) {\r\n          targetRatings.push(getRandomRating(min, max));\r\n        }\r\n        console.log(\"Target Ratings\", targetRatings);\r\n\r\n        if (min > max) {\r\n          alert(\"Invalid input, min is larger than max\");\r\n          return;\r\n        }\r\n\r\n        // Show loading animation\r\n        document.getElementById(\"loading-hider\").classList.add(\"none\");\r\n        document.getElementById(\"loading\").classList.remove(\"none\");\r\n\r\n        const response = await fetch(AOE2_NET_PROXY_URL, {\r\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n          mode: \"cors\", // no-cors, *cors, same-origin\r\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n          credentials: \"same-origin\", // include, *same-origin, omit\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          redirect: \"follow\", // manual, *follow, error\r\n          referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n          body: JSON.stringify({\r\n            query: `matches?game=aoe2de&count=${MATCHES_TO_REQUEST}&since=${\r\n              Math.round(new Date().getTime() / 1000) - 1000\r\n            }`,\r\n          }),\r\n        });\r\n\r\n        //let jsonResponse = response.json();\r\n        let data = await response.json();\r\n        console.log(data);\r\n\r\n        // We only want v1 random map ranked games\r\n        let filtered = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n          let match = data[i];\r\n\r\n          let leaderboardId = match.leaderboard_id;\r\n\r\n          if (leaderboardId === 3) {\r\n            let matchId = match.match_id;\r\n\r\n            let playerOneName = match.players[0].name;\r\n            let playerTwoName = match.players[1].name;\r\n\r\n            let playerOneId = match.players[0].profile_id;\r\n            let playerTwoId = match.players[1].profile_id;\r\n\r\n            let playerOneCiv = Helper.getCivLabel(match.players[0].civ);\r\n            let playerTwoCiv = Helper.getCivLabel(match.players[1].civ);\r\n\r\n            let playerOneRating = match.players[0].rating;\r\n            let playerTwoRating = match.players[1].rating;\r\n\r\n            let map = Helper.getMapLabel(match.map_type);\r\n\r\n            let avgRating;\r\n            if (!playerTwoRating && !playerOneRating) {\r\n              avgRating = \"none\";\r\n            } else if (playerTwoRating && playerOneRating) {\r\n              avgRating = (playerTwoRating + playerOneRating) / 2;\r\n            } else if (playerTwoRating) {\r\n              avgRating = playerOneRating;\r\n            } else {\r\n              avgRating = playerTwoRating;\r\n            }\r\n\r\n            filtered.push({\r\n              avgRating,\r\n              map,\r\n              playerOneRating,\r\n              playerTwoRating,\r\n              matchId,\r\n              playerOneName,\r\n              playerTwoName,\r\n              playerOneCiv,\r\n              playerTwoCiv,\r\n              playerOneId,\r\n              playerTwoId,\r\n            });\r\n          }\r\n        }\r\n\r\n        console.log(\"Filtered Matches (Ranked 1v1 Only)\", filtered);\r\n\r\n        // Select the matches closest to each of the random ratings selected earlier\r\n        let pickedMatches = [];\r\n        for (let j = 0; j < targetRatings.length; j++) {\r\n          let pickedMatch;\r\n          let pickedMatchDiff = 99999999;\r\n          for (let i = 0; i < filtered.length; i++) {\r\n            let matchToConsider = filtered[i];\r\n            if (matchToConsider.avgRating) {\r\n              let diff = Math.abs(targetRatings[j] - matchToConsider.avgRating);\r\n              if (diff < pickedMatchDiff) {\r\n                pickedMatch = matchToConsider;\r\n                pickedMatchDiff = diff;\r\n              }\r\n            }\r\n          }\r\n          pickedMatches.push(pickedMatch);\r\n        }\r\n        console.log(\"Selected\", pickedMatches);\r\n\r\n        this.setState({ selectedMatches: pickedMatches });\r\n      } catch (e) {\r\n        console.log(e);\r\n        alert(\r\n          \"Sorry, there was an error while attempting to get data from aoe2.net\"\r\n        );\r\n      } finally {\r\n        // Un Show loading animation\r\n        document.getElementById(\"loading-hider\").classList.remove(\"none\");\r\n        document.getElementById(\"loading\").classList.add(\"none\");\r\n      }\r\n    }.bind(this);\r\n  }\r\n\r\n  render() {\r\n    let selectedMatchUiElements = [];\r\n    for (let i = 0; i < this.state.selectedMatches.length; i++) {\r\n      let match = this.state.selectedMatches[i];\r\n      selectedMatchUiElements.push(\r\n        <MatchPanel\r\n          matchId={match.matchId}\r\n          playerOneName={match.playerOneName}\r\n          playerTwoName={match.playerTwoName}\r\n          playerOneCiv={match.playerOneCiv}\r\n          playerTwoCiv={match.playerTwoCiv}\r\n          playerOneRating={match.playerOneRating}\r\n          playerTwoRating={match.playerTwoRating}\r\n          playerOneId={match.playerOneId}\r\n          playerTwoId={match.playerTwoId}\r\n          map={match.map}\r\n          key={i + \"selected-match\"}\r\n        ></MatchPanel>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\" }}>\r\n          <h1>Age of Empires 2: DE</h1>\r\n          <h2>Random Rating Match Retriever</h2>\r\n          <div>\r\n            Playing guess the elo? Selecting a \"random\" game from the ongoing\r\n            matches won't get you a very even distribution of ratings.\r\n          </div>\r\n          <br></br>\r\n          <div>\r\n            This tool:\r\n            <br></br> 1. Selects a random rating between two values.\r\n            <br></br> 2. Then selects the closest ongoing game to that rating.\r\n          </div>\r\n          <br></br>\r\n          <div className=\"options-pane\">\r\n            <div>\r\n              <div>\r\n                <label for=\"minRating\">Min Rating</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"minRating\"\r\n                  name=\"minRating\"\r\n                  step=\"1\"\r\n                  value={this.state.minRating}\r\n                  onChange={this.handleMinRatingChange}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <label for=\"maxRating\">Max Rating</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"maxRating\"\r\n                  name=\"maxRating\"\r\n                  step=\"1\"\r\n                  value={this.state.maxRating}\r\n                  onChange={this.handleMaxRatingChange}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <label for=\"numberOfMatches\"># of Results</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"numberOfMatches\"\r\n                  name=\"numberOfMatches\"\r\n                  step=\"1\"\r\n                  max=\"500\"\r\n                  min=\"1\"\r\n                  value={this.state.numberOfMatches}\r\n                  onChange={this.handleNumberOfMatchesChange}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"big-button button\" onClick={this.onRandomClick}>\r\n            <div id=\"loading\" className=\"outer-loading-spinner none\">\r\n              <div className=\"loading-spinner\">\r\n                <div className=\"spinner-dot\"></div>\r\n                <div className=\"spinner-dot\"></div>\r\n                <div className=\"spinner-dot\"></div>\r\n                <div className=\"spinner-dot\"></div>\r\n                <div className=\"spinner-dot\"></div>\r\n                <div className=\"spinner-dot\"></div>\r\n              </div>\r\n            </div>\r\n            <div id=\"loading-hider\">\r\n              Get Match{this.state.numberOfMatches == \"1\" ? \"\" : \"es\"}\r\n            </div>\r\n          </button>\r\n          <br></br>\r\n          {selectedMatchUiElements}\r\n          <br></br>\r\n          <div className=\"footer\">\r\n            View source code on{\" \"}\r\n            <a href=\"https://github.com/thbrown/aoe2-de-random-elo\">github</a>\r\n            <br></br>\r\n            Data from <a href=\"https://aoe2.net/#api\">https://aoe2.net/#api</a>\r\n            <br></br>\r\n            <br></br>\r\n            Age of Empires II: Definitive Edition© Microsoft Corporation. This\r\n            site was created under Microsoft's{\" \"}\r\n            <a href=\"https://www.xbox.com/en-US/developers/rules\">\r\n              \"Game Content Usage Rules\"\r\n            </a>{\" \"}\r\n            using assets from Age of Empires II: Definitive Edition, and it is\r\n            not endorsed by or affiliated with Microsoft.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getRandomRating = function (min, max) {\r\n  return Math.round(Math.random() * (max - min) + min);\r\n};\r\n\r\n/*\r\n\r\nUseful CURL commands for testing CORS\r\n\r\ncurl -H \"Origin: http://localhost:3000\" --verbose \\\r\n    \"https://us-central1-age-of-empires-307521.cloudfunctions.net/aoe2-net-cors-proxy\"\r\n\r\nPREFLIGHT request test\r\n\r\ncurl -H \"Origin: http://localhost:3000\" \\\r\n  -H \"Access-Control-Request-Method: POST\" \\\r\n  -H \"Access-Control-Request-Headers: X-Requested-With\" \\\r\n  -X OPTIONS --verbose \\\r\n  https://us-central1-age-of-empires-307521.cloudfunctions.net/aoe2-net-cors-proxy\r\n \r\n {\r\n          \"query\": \"matches?game=aoe2de&count=1&since=1596775000\"\r\n        }\r\n \r\n  */\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}